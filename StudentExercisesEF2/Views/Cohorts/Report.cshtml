@model StudentExercisesEF.Models.ViewModels.CohortReportViewModel

@{
    ViewData["Title"] = "Report";
}

<h1>Report</h1>

<div>
    <h4>Cohort Report</h4>
    <hr />
    <form asp-action="Report" method="GET">
        <div class="form-group">
            <label class="control-label">Choose a cohort:</label>
            <select asp-for="currentCohortId" class="form-control"
                    asp-items="@Model.allCohorts"></select>
            <span asp-validation-for="currentCohortId" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-block btn-outline-success">View Report</button>
    </form>
    <hr />
    <div>
        <h5>@Html.DisplayNameFor(model => model.mostWorkedOnExercises)</h5>
        @if (@Model.mostWorkedOnExercises.Count() > 0)
        {
            @await Html.PartialAsync("_ExerciseReportPartial", @Model.mostWorkedOnExercises)

        }

    </div>
    <hr />
    <div>
        <h5>@Html.DisplayNameFor(model => model.topThreeBusiestStudents)</h5>
        @if (@Model.mostWorkedOnExercises.Count() > 0)
        {
            @await Html.PartialAsync("_StudentReportPartial", @Model.topThreeBusiestStudents)

        }
    </div>
    <hr />
    <div>
        <h5>@Html.DisplayNameFor(model => model.topThreeLaziestStudents)</h5>
        @if (@Model.topThreeLaziestStudents.Count() > 0)
        {

            @await Html.PartialAsync("_StudentReportPartial", @Model.topThreeLaziestStudents)

        }

    </div>
</div>
<div>

    <a asp-action="Index">Back to List</a>
</div>
